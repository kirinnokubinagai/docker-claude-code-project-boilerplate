# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
version: "3.8"

name: claude-code-${PROJECT_NAME}

services:
  # Claude Code Company 環境
  claude-code:
    image: claude-code-base:latest
    build:
      context: ${CLAUDE_PROJECT_DIR}
      dockerfile: DockerfileBase
      args:
        - CLAUDE_AUTH_DIR=${HOME}
    container_name: claude-code-${PROJECT_NAME}
    # ENTRYPOINTはrootで実行、その後developerに切り替え
    # user: "${USER_UID:-1000}:${USER_GID:-1000}"
    env_file:
      - .env
    volumes:
      # プロジェクトディレクトリを/workspaceにマウント
      - .:/workspace:delegated

      # docker-baseディレクトリを別の場所にマウント
      - ${CLAUDE_PROJECT_DIR}/docker-base:/opt/claude-system:ro

      # Git設定をホストから引き継ぎ
      - ~/.gitconfig:/home/developer/.gitconfig:ro
      - ~/.ssh:/home/developer/.ssh:ro

      # Claude設定を直接マウント（読み書き可能）
      - ~/.claude:/home/developer/.claude

      # bash履歴は名前付きボリュームとしてマウント
      - bash_history:/home/developer/.bash_history
      # zデータはファイルではなくディレクトリとしてマウント
      - z_data:/home/developer/.z_data

      # GitHub CLI設定を引き継ぎ
      - ~/.config/gh:/home/developer/.config/gh:ro

      # Dockerソケットマウント（Docker内Docker実行用）
      - /var/run/docker.sock:/var/run/docker.sock

    working_dir: /workspace
    stdin_open: true
    tty: true
    restart: unless-stopped

    deploy:
      resources:
        limits:
          memory: 8G
          cpus: "4.0"
        reservations:
          memory: 4G
          cpus: "2.0"

    # カスタムネットワーク使用（コンテナ間通信用）
    networks:
      - claude-network
    # ホストのMCPサーバーにアクセスするため
    extra_hosts:
      - "host.docker.internal:host-gateway"

    # ポート範囲を開放（動的に割り当て）
    ports:
      - "${PLAYWRIGHT_PORT_RANGE:-30000-30999}:30000-30999"  # Playwright MCPサーバー用
      - "${VNC_PORT_RANGE:-40000-40999}:40000-40999"  # Playwright VNC用（オプション）
      - "${WEBVNC_PORT_RANGE:-50000-50999}:50000-50999"  # Playwright Web VNC用（オプション）
      # 開発サーバーのポートは公開不要（コンテナ内でのみアクセス）
      # 必要な場合は個別にdocker-compose.override.ymlで追加

    # ホストのネットワークモードを使用（MCPサーバー接続用）
    # network_mode: "host"  # 必要に応じてコメントアウトを外す

  # Playwright MCP Server は master コマンド実行時に動的に起動

volumes:
  # bash履歴ファイル用ボリューム
  bash_history:
    name: ${PROJECT_NAME}_bash_history
    external: true
  # zディレクトリジャンプ用ボリューム
  z_data:
    name: ${PROJECT_NAME}_z
    external: true

networks:
  claude-network:
    driver: bridge
    name: ${PROJECT_NAME}_network
