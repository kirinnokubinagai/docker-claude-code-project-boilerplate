# yaml-language-server: $schema=
# This is a template file with {{PROJECT_NAME}} placeholders
# YAML validation is intentionally disabled for this template
version: "3.8"

name: claude-code-{{PROJECT_NAME}}

services:
  # Claude Code Company 環境
  claude-code:
    build:
      context: ${CLAUDE_PROJECT_DIR}
      dockerfile: DockerfileBase
    container_name: claude-code-{{PROJECT_NAME}}
    # ENTRYPOINTはrootで実行、その後developerに切り替え
    # user: "${USER_UID:-1000}:${USER_GID:-1000}"
    volumes:
      # claude-project（boilerplate）を読み取り専用でマウント
      - ${CLAUDE_PROJECT_DIR}:/claude-project:ro
      
      # プロジェクトディレクトリ
      - .:/workspace:delegated
      
      # docker-baseディレクトリを別の場所にマウント
      - ${CLAUDE_PROJECT_DIR}/docker-base:/opt/claude-system:ro

      # Claude Code設定（認証が含まれるためこれがないとloginが必要）
      - ~/.claude:/home/developer/.claude:ro

      # Git設定をホストから引き継ぎ
      - ~/.gitconfig:/home/developer/.gitconfig:ro
      - ~/.ssh:/home/developer/.ssh:ro
      
      # GitHub CLI設定を引き継ぎ
      - ~/.config/gh:/home/developer/.config/gh:ro

      # データ永続化（プロジェクト別）
      - bash_history:/home/developer/.bash_history
      - z_data:/home/developer
      - tmux_data:/home/developer/.tmux

      # Dockerソケットマウント（Docker内Docker実行用）
      - /var/run/docker.sock:/var/run/docker.sock

    environment:
      # 環境変数 (.envファイルから自動的に読み込まれます)
      # 設定されていない変数は無視されます
      
      # Claude Code
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

      # MCP Servers
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - SUPABASE_ACCESS_TOKEN=${SUPABASE_ACCESS_TOKEN}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - CHANNEL_ACCESS_TOKEN=${CHANNEL_ACCESS_TOKEN}
      - DESTINATION_USER_ID=${DESTINATION_USER_ID}
      - OBSIDIAN_API_KEY=${OBSIDIAN_API_KEY}
      - OBSIDIAN_HOST=${OBSIDIAN_HOST:-localhost:27123}
      - MAGIC_API_KEY=${MAGIC_API_KEY}
      - DEFAULT_MINIMUM_TOKENS=${DEFAULT_MINIMUM_TOKENS:-6000}

    working_dir: /workspace
    stdin_open: true
    tty: true
    restart: unless-stopped
    
    # リソース制限の設定（必要に応じてコメントアウトを解除）
    # deploy:
    #   resources:
    #     limits:
    #       memory: 16G
    #       cpus: '8.0'
    #     reservations:
    #       memory: 8G
    #       cpus: '4.0'

    # カスタムネットワーク使用（コンテナ間通信用）
    networks:
      - claude-network
    # ホストのMCPサーバーにアクセスするため
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    # ホストのネットワークモードを使用（MCPサーバー接続用）
    # network_mode: "host"  # 必要に応じてコメントアウトを外す


volumes:
  bash_history:
    external: true
    name: {{PROJECT_NAME}}_bash_history
  z_data:
    external: true
    name: {{PROJECT_NAME}}_z_data
  tmux_data:
    external: true
    name: {{PROJECT_NAME}}_tmux_data

networks:
  claude-network:
    driver: bridge
    name: {{PROJECT_NAME}}_network
